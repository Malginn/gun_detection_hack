version: '3.4'
services:
  backend:
    container_name: nn_kucha
    build:
      context: backend/
    command: bash -c "python /app/manage.py makemigrations app && python /app/manage.py migrate --noinput && python /app/manage.py runserver 0.0.0.0:8000"
    #command: bash -c "python app.py"
    volumes:
      - ./backend/:/app/
      - ./backend/:/usr/src/app/
      - ./backend/uploads/:/app/uploads/
    ports:
      - 8000:8000
    restart:
      on-failure
    networks:
      - front_back
    links:
      - redis
    depends_on:
      - redis

  frontend:
    build:
      context: Frontend/
    ports:
      - 80:80
    depends_on:
      - backend
    restart:
      on-failure
    networks:
      - front_back
    volumes:
      - /usr/share/nginx/html
      - ./backend/:/app/
  redis:
    container_name: redis
    image: "redis:alpine"
    networks:
      - front_back

  celery:
    build:
      context: backend/
    command: celery -A backend worker -l info
    volumes:
      - ./backend/:/app/
      - ./backend/:/usr/src/app/
      - ./backend/uploads/:/app/uploads/
    depends_on:
      - redis
    networks:
      - front_back
    links:
      - redis


  nginx:
    image: nginx:latest
    container_name: my-nginx
    ports:
      - "8080:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./certs:/etc/nginx/certs
    restart: always

  certbot:
    image: certbot/certbot
    volumes:
      - ./certs:/etc/letsencrypt
    command: certonly --webroot --webroot-path=/var/www/html -d localhost

networks:
  front_back: